pub fn get_font_index(c: char) -> Option<usize> {
    match c {
        'A'..='Z' => Some((c as usize) - ('A' as usize)), // A=0, B=1, ..., Z=25
        '0'..='9' => Some((c as usize) - ('0' as usize) + 26), // 0=26, 1=27, ..., 9=35
        _ => None,                                        // Unsupported character
    }
}

pub const FONT: [[u8; 8]; 36] = [
    // A-Z
    [
        0b01111110, 0b10000001, 0b10000001, 0b11111111, 0b10000001, 0b10000001, 0b10000001,
        0b00000000,
    ], // 'A'
    [
        0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10000001, 0b10000001, 0b11111110,
        0b00000000,
    ], // 'B'
    [
        0b01111110, 0b10000001, 0b10000000, 0b10000000, 0b10000000, 0b10000001, 0b01111110,
        0b00000000,
    ], // 'C'
    [
        0b11111100, 0b10000010, 0b10000001, 0b10000001, 0b10000001, 0b10000010, 0b11111100,
        0b00000000,
    ], // 'D'
    [
        0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b10000000, 0b10000000, 0b11111111,
        0b00000000,
    ], // 'E'
    [
        0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b10000000, 0b10000000, 0b10000000,
        0b00000000,
    ], // 'F'
    [
        0b01111110, 0b10000001, 0b10000000, 0b10001111, 0b10000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // 'G'
    [
        0b10000001, 0b10000001, 0b10000001, 0b11111111, 0b10000001, 0b10000001, 0b10000001,
        0b00000000,
    ], // 'H'
    [
        0b00111100, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00111100,
        0b00000000,
    ], // 'I'
    [
        0b00011111, 0b00000110, 0b00000110, 0b00000110, 0b00000110, 0b10000110, 0b01111100,
        0b00000000,
    ], // 'J'
    [
        0b10000001, 0b10000010, 0b10000100, 0b11111000, 0b10000100, 0b10000010, 0b10000001,
        0b00000000,
    ], // 'K'
    [
        0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b11111111,
        0b00000000,
    ], // 'L'
    [
        0b10000001, 0b11000011, 0b10100101, 0b10011001, 0b10000001, 0b10000001, 0b10000001,
        0b00000000,
    ], // 'M'
    [
        0b10000001, 0b11000001, 0b10100001, 0b10010001, 0b10001001, 0b10000101, 0b10000011,
        0b00000000,
    ], // 'N'
    [
        0b01111110, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // 'O'
    [
        0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10000000, 0b10000000, 0b10000000,
        0b00000000,
    ], // 'P'
    [
        0b01111110, 0b10000001, 0b10000001, 0b10000001, 0b10001001, 0b10000101, 0b01111110,
        0b00000001,
    ], // 'Q'
    [
        0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10001000, 0b10000100, 0b10000010,
        0b00000000,
    ], // 'R'
    [
        0b01111110, 0b10000001, 0b10000000, 0b01111110, 0b00000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // 'S'
    [
        0b11111111, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b00011000,
        0b00000000,
    ], // 'T'
    [
        0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // 'U'
    [
        0b10000001, 0b10000001, 0b10000001, 0b01000010, 0b01000010, 0b00100100, 0b00011000,
        0b00000000,
    ], // 'V'
    [
        0b10000001, 0b10000001, 0b10000001, 0b10011001, 0b10011001, 0b01100110, 0b01100110,
        0b00000000,
    ], // 'W'
    [
        0b10000001, 0b01000010, 0b00100100, 0b00011000, 0b00100100, 0b01000010, 0b10000001,
        0b00000000,
    ], // 'X'
    [
        0b10000001, 0b01000010, 0b00100100, 0b00011000, 0b00011000, 0b00011000, 0b00011000,
        0b00000000,
    ], // 'Y'
    [
        0b11111111, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b11111111,
        0b00000000,
    ], // 'Z'
    // 0-9
    [
        0b01111110, 0b10000001, 0b10000011, 0b10100101, 0b11000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // '0'
    [
        0b00011000, 0b00111000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b01111110,
        0b00000000,
    ], // '1'
    [
        0b01111110, 0b10000001, 0b00000001, 0b00001110, 0b00110000, 0b01000000, 0b11111111,
        0b00000000,
    ], // '2'
    [
        0b01111110, 0b10000001, 0b00000001, 0b00111110, 0b00000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // '3'
    [
        0b00001000, 0b00011000, 0b00101000, 0b01001000, 0b11111111, 0b00001000, 0b00001000,
        0b00000000,
    ], // '4'
    [
        0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b00000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // '5'
    [
        0b01111110, 0b10000001, 0b10000000, 0b11111110, 0b10000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // '6'
    [
        0b11111111, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000,
        0b00000000,
    ], // '7'
    [
        0b01111110, 0b10000001, 0b10000001, 0b01111110, 0b10000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // '8'
    [
        0b01111110, 0b10000001, 0b10000001, 0b01111111, 0b00000001, 0b10000001, 0b01111110,
        0b00000000,
    ], // '9'
];