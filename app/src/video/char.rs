use crate::video::draw_text::FontSize;

pub fn get_char_bitmap(c: char, size: FontSize) -> Option<Box<[u8]>> {
    match size {
        FontSize::Big8x8 => char_bitmap_8x8(c).map(Box::from),
        FontSize::Normal5x6 => char_bitmap_5x6(c).map(Box::from),
        FontSize::Tiny3x4 => char_bitmap_3x4(c).map(Box::from),
        FontSize::Small4x5 => char_bitmap_4x5(c).map(Box::from),
    }
}

fn char_bitmap_3x4(c: char) -> Option<[u8; 4]> {
    match c {
        '0' => [0b111, 0b101, 0b101, 0b111].into(),
        '1' => [0b010, 0b110, 0b010, 0b111].into(),
        '2' => [0b110, 0b001, 0b010, 0b111].into(),
        '3' => [0b111, 0b010, 0b001, 0b111].into(),
        '4' => [0b101, 0b101, 0b111, 0b001].into(),
        '5' => [0b111, 0b100, 0b011, 0b111].into(),
        '6' => [0b100, 0b111, 0b101, 0b111].into(),
        '7' => [0b111, 0b001, 0b010, 0b010].into(),
        '8' => [0b111, 0b101, 0b111, 0b111].into(),
        '9' => [0b111, 0b101, 0b111, 0b001].into(),
        '.' => [0b000, 0b000, 0b000, 0b010].into(),
        _ => None,
    }
}

fn char_bitmap_4x5(ch: char) -> Option<[u8; 5]> {
    Some(match ch {
        'A' | 'a' => [0b0110, 0b1001, 0b1111, 0b1001, 0b1001],
        'B' | 'b' => [0b1110, 0b1001, 0b1110, 0b1001, 0b1110],
        'C' | 'c' => [0b0111, 0b1000, 0b1000, 0b1000, 0b0111],
        'D' | 'd' => [0b1110, 0b1001, 0b1001, 0b1001, 0b1110],
        'E' | 'e' => [0b1111, 0b1000, 0b1110, 0b1000, 0b1111],
        'F' | 'f' => [0b1111, 0b1000, 0b1110, 0b1000, 0b1000],
        'G' | 'g' => [0b0111, 0b1000, 0b1011, 0b1001, 0b0111],
        'H' | 'h' => [0b1001, 0b1001, 0b1111, 0b1001, 0b1001],
        'I' | 'i' => [0b1110, 0b0100, 0b0100, 0b0100, 0b1110],
        'J' | 'j' => [0b0011, 0b0001, 0b0001, 0b1001, 0b0110],
        'K' | 'k' => [0b1001, 0b1010, 0b1100, 0b1010, 0b1001],
        'L' | 'l' => [0b1000, 0b1000, 0b1000, 0b1000, 0b1111],
        'M' | 'm' => [0b1001, 0b1111, 0b1111, 0b1001, 0b1001],
        'N' | 'n' => [0b1001, 0b1101, 0b1011, 0b1001, 0b1001],
        'O' | 'o' => [0b0110, 0b1001, 0b1001, 0b1001, 0b0110],
        'P' | 'p' => [0b1110, 0b1001, 0b1110, 0b1000, 0b1000],
        'Q' | 'q' => [0b0110, 0b1001, 0b1001, 0b1011, 0b0111],
        'R' | 'r' => [0b1110, 0b1001, 0b1110, 0b1010, 0b1001],
        'S' | 's' => [0b0111, 0b1000, 0b0110, 0b0001, 0b1110],
        'T' | 't' => [0b1110, 0b0100, 0b0100, 0b0100, 0b0100],
        'U' | 'u' => [0b1001, 0b1001, 0b1001, 0b1001, 0b0110],
        'V' | 'v' => [0b1001, 0b1001, 0b1001, 0b0110, 0b0100],
        'W' | 'w' => [0b1001, 0b1001, 0b1111, 0b1111, 0b1001],
        'X' | 'x' => [0b1001, 0b0110, 0b0110, 0b0110, 0b1001],
        'Y' | 'y' => [0b1001, 0b1001, 0b0110, 0b0010, 0b0010],
        'Z' | 'z' => [0b1111, 0b0010, 0b0100, 0b1000, 0b1111],

        '0' => [0b0110, 0b1001, 0b1001, 0b1001, 0b0110],
        '1' => [0b0100, 0b1100, 0b0100, 0b0100, 0b1110],
        '2' => [0b1110, 0b0001, 0b1110, 0b1000, 0b1111],
        '3' => [0b1110, 0b0001, 0b0110, 0b0001, 0b1110],
        '4' => [0b1001, 0b1001, 0b1111, 0b0001, 0b0001],
        '5' => [0b1111, 0b1000, 0b1110, 0b0001, 0b1110],
        '6' => [0b0110, 0b1000, 0b1110, 0b1001, 0b0110],
        '7' => [0b1111, 0b0001, 0b0010, 0b0100, 0b0100],
        '8' => [0b0110, 0b1001, 0b0110, 0b1001, 0b0110],
        '9' => [0b0110, 0b1001, 0b0111, 0b0001, 0b0110],

        '.' => [0b0000, 0b0000, 0b0000, 0b0110, 0b0110],
        '<' => [0b0001, 0b0010, 0b0100, 0b0010, 0b0001],
        '>' => [0b0100, 0b0010, 0b0001, 0b0010, 0b0100],
        '(' => [0b0010, 0b0100, 0b0100, 0b0100, 0b0010],
        ')' => [0b0100, 0b0010, 0b0010, 0b0010, 0b0100],
        ',' => [0b0000, 0b0000, 0b0000, 0b0010, 0b0110],
        '!' => [0b0010, 0b0010, 0b0010, 0b0000, 0b0010],
        '-' => [0b0000, 0b0000, 0b1111, 0b0000, 0b0000],
        '+' => [0b0000, 0b0010, 0b1111, 0b0010, 0b0000],
        '*' => [0b0000, 0b1010, 0b0110, 0b1010, 0b0000],
        '■' => [0b0000, 0b1111, 0b1111, 0b1111, 0b0000],
        '●' => [0b0000, 0b0110, 0b1111, 0b0110, 0b0000],
        '▶' => [0b0010, 0b0011, 0b0011, 0b0010, 0b0000],
        '◀' => [0b0010, 0b0110, 0b0110, 0b0010, 0b0000],
        '▲' => [0b0010, 0b0111, 0b1111, 0b0000, 0b0000],
        '▼' => [0b0000, 0b0000, 0b1111, 0b0111, 0b0010],
        '#' => [0b0101, 0b1111, 0b0101, 0b1111, 0b0101],
        ':' => [0b0000, 0b0010, 0b0000, 0b0010, 0b0000],
        '/' => [0b0001, 0b0010, 0b0100, 0b1000, 0b0000],
        '\\' => [0b1000, 0b0100, 0b0010, 0b0001, 0b0000],
        'µ' => [0b1001, 0b1001, 0b1001, 0b1111, 0b1000],
        '…' => [0b0000, 0b0000, 0b0000, 0b0000, 0b1010],
        '[' => [0b1110, 0b1000, 0b1000, 0b1000, 0b1110],
        ']' => [0b1110, 0b0010, 0b0010, 0b0010, 0b1110],

        _ => [0b0000; 5],
    })
}

fn char_bitmap_5x6(c: char) -> Option<[u8; 6]> {
    match c {
        'A' => Some([0b01110, 0b10001, 0b11111, 0b10001, 0b10001, 0b10001]),
        'B' => Some([0b11110, 0b10001, 0b11110, 0b10001, 0b10001, 0b11110]),
        'C' => Some([0b01110, 0b10001, 0b10000, 0b10000, 0b10001, 0b01110]),
        'D' => Some([0b11100, 0b10010, 0b10001, 0b10001, 0b10010, 0b11100]),
        'E' => Some([0b11111, 0b10000, 0b11110, 0b10000, 0b10000, 0b11111]),
        'F' => Some([0b11111, 0b10000, 0b10000, 0b11110, 0b10000, 0b10000]),
        'G' => Some([0b01110, 0b10000, 0b10000, 0b10011, 0b10001, 0b01111]),
        'H' => Some([0b10001, 0b10001, 0b11111, 0b10001, 0b10001, 0b10001]),
        'I' => Some([0b01110, 0b00100, 0b00100, 0b00100, 0b00100, 0b01110]),
        'J' => Some([0b00011, 0b00010, 0b00010, 0b00010, 0b10010, 0b01100]),
        'K' => Some([0b10001, 0b10010, 0b11100, 0b10010, 0b10001, 0b10001]),
        'L' => Some([0b10000, 0b10000, 0b10000, 0b10000, 0b10000, 0b11111]),
        'M' => Some([0b10001, 0b11011, 0b10101, 0b10001, 0b10001, 0b10001]),
        'N' => Some([0b10001, 0b11001, 0b10101, 0b10011, 0b10001, 0b10001]),
        'O' => Some([0b01110, 0b10001, 0b10001, 0b10001, 0b10001, 0b01110]),
        'P' => Some([0b11110, 0b10001, 0b10001, 0b11110, 0b10000, 0b10000]),
        'Q' => Some([0b01110, 0b10001, 0b10001, 0b10101, 0b10010, 0b01101]),
        'R' => Some([0b11110, 0b10001, 0b10001, 0b11110, 0b10001, 0b10001]),
        'S' => Some([0b01111, 0b10000, 0b01110, 0b00001, 0b10001, 0b01110]),
        'T' => Some([0b11111, 0b00100, 0b00100, 0b00100, 0b00100, 0b00100]),
        'U' => Some([0b10001, 0b10001, 0b10001, 0b10001, 0b10001, 0b01110]),
        'V' => Some([0b10001, 0b10001, 0b10001, 0b01010, 0b01010, 0b00100]),
        'W' => Some([0b10001, 0b10001, 0b10001, 0b10101, 0b10101, 0b01010]),
        'X' => Some([0b10001, 0b01010, 0b00100, 0b00100, 0b01010, 0b10001]),
        'Y' => Some([0b10001, 0b01010, 0b00100, 0b00100, 0b00100, 0b00100]),
        'Z' => Some([0b11111, 0b00010, 0b00100, 0b01000, 0b10000, 0b11111]),
        'a' => Some([0b00000, 0b01110, 0b00001, 0b01111, 0b10001, 0b01111]),
        'b' => Some([0b10000, 0b10000, 0b11110, 0b10001, 0b10001, 0b11110]),
        'c' => Some([0b00000, 0b01110, 0b10000, 0b10000, 0b10000, 0b01110]),
        'd' => Some([0b00001, 0b00001, 0b01111, 0b10001, 0b10001, 0b01111]),
        'e' => Some([0b00000, 0b01110, 0b10001, 0b11111, 0b10000, 0b01110]),
        'f' => Some([0b00110, 0b01000, 0b11100, 0b01000, 0b01000, 0b01000]),
        'g' => Some([0b00000, 0b01111, 0b10001, 0b01111, 0b00001, 0b01110]),
        'h' => Some([0b10000, 0b10000, 0b11110, 0b10001, 0b10001, 0b10001]),
        'i' => Some([0b00100, 0b00000, 0b01100, 0b00100, 0b00100, 0b01110]),
        'j' => Some([0b00010, 0b00000, 0b00110, 0b00010, 0b00010, 0b11100]),
        'k' => Some([0b10000, 0b10010, 0b10100, 0b11000, 0b10100, 0b10010]),
        'l' => Some([0b11000, 0b01000, 0b01000, 0b01000, 0b01000, 0b11100]),
        'm' => Some([0b00000, 0b11010, 0b10101, 0b10101, 0b10101, 0b10101]),
        'n' => Some([0b00000, 0b11110, 0b10001, 0b10001, 0b10001, 0b10001]),
        'o' => Some([0b00000, 0b01110, 0b10001, 0b10001, 0b10001, 0b01110]),
        'p' => Some([0b00000, 0b11110, 0b10001, 0b11110, 0b10000, 0b10000]),
        'q' => Some([0b00000, 0b01111, 0b10001, 0b01111, 0b00001, 0b00001]),
        'r' => Some([0b00000, 0b10110, 0b11001, 0b10000, 0b10000, 0b10000]),
        's' => Some([0b00000, 0b01111, 0b10000, 0b01110, 0b00001, 0b11110]),
        't' => Some([0b00100, 0b01110, 0b00100, 0b00100, 0b00100, 0b00011]),
        'u' => Some([0b00000, 0b10001, 0b10001, 0b10001, 0b10011, 0b01101]),
        'v' => Some([0b00000, 0b10001, 0b10001, 0b01010, 0b01010, 0b00100]),
        'w' => Some([0b00000, 0b10001, 0b10001, 0b10101, 0b10101, 0b01010]),
        'x' => Some([0b00000, 0b10001, 0b01010, 0b00100, 0b01010, 0b10001]),
        'y' => Some([0b00000, 0b10001, 0b10001, 0b01111, 0b00001, 0b01110]),
        'z' => Some([0b00000, 0b11111, 0b00010, 0b00100, 0b01000, 0b11111]),
        '0' => Some([0b01110, 0b10011, 0b10101, 0b11001, 0b10001, 0b01110]),
        '1' => Some([0b00100, 0b01100, 0b00100, 0b00100, 0b00100, 0b01110]),
        '2' => Some([0b01110, 0b10001, 0b00010, 0b00100, 0b01000, 0b11111]),
        '3' => Some([0b11110, 0b00001, 0b00110, 0b00001, 0b10001, 0b01110]),
        '4' => Some([0b00010, 0b00110, 0b01010, 0b11111, 0b00010, 0b00010]),
        '5' => Some([0b11111, 0b10000, 0b11110, 0b00001, 0b10001, 0b01110]),
        '6' => Some([0b01110, 0b10000, 0b11110, 0b10001, 0b10001, 0b01110]),
        '7' => Some([0b11111, 0b00001, 0b00010, 0b00100, 0b01000, 0b01000]),
        '8' => Some([0b01110, 0b10001, 0b01110, 0b10001, 0b10001, 0b01110]),
        '9' => Some([0b01110, 0b10001, 0b10001, 0b01111, 0b00001, 0b01110]),
        '.' => Some([0b00000, 0b00000, 0b00000, 0b00000, 0b01100, 0b01100]),
        '<' => Some([0b00010, 0b00100, 0b01000, 0b00100, 0b00010, 0b00000]),
        '>' => Some([0b01000, 0b00100, 0b00010, 0b00100, 0b01000, 0b00000]),
        '(' => Some([0b00010, 0b00100, 0b00100, 0b00100, 0b00100, 0b00010]),
        ')' => Some([0b01000, 0b00100, 0b00100, 0b00100, 0b00100, 0b01000]),
        ',' => Some([0b00000, 0b00000, 0b00000, 0b00000, 0b00110, 0b01100]),
        '!' => Some([0b00100, 0b00100, 0b00100, 0b00100, 0b00000, 0b00100]),
        '-' => Some([0b00000, 0b00000, 0b11111, 0b00000, 0b00000, 0b00000]),
        '+' => Some([0b00000, 0b00100, 0b00100, 0b11111, 0b00100, 0b00100]),
        '*' => Some([0b00000, 0b10101, 0b01110, 0b11111, 0b01110, 0b10101]),
        '■' => Some([0b00000, 0b11111, 0b11111, 0b11111, 0b11111, 0b00000]),
        '●' => Some([0b00000, 0b01110, 0b11111, 0b11111, 0b01110, 0b00000]),
        '▶' => Some([0b00100, 0b00110, 0b00111, 0b00110, 0b00100, 0b00000]),
        '◀' => Some([0b00100, 0b01100, 0b11100, 0b01100, 0b00100, 0b00000]),
        '▲' => Some([0b00100, 0b01110, 0b11111, 0b00000, 0b00000, 0b00000]),
        '▼' => Some([0b00000, 0b00000, 0b00000, 0b11111, 0b01110, 0b00100]),
        '#' => Some([0b01010, 0b11111, 0b01010, 0b01010, 0b11111, 0b01010]),
        ':' => Some([0b00000, 0b00100, 0b00000, 0b00000, 0b00100, 0b00000]),
        '/' => Some([0b00000, 0b00001, 0b00010, 0b00100, 0b01000, 0b10000]),
        '\\' => Some([0b00000, 0b10000, 0b01000, 0b00100, 0b00010, 0b00001]),
        'µ' => Some([0b10001, 0b10001, 0b10001, 0b10011, 0b11101, 0b10000]),
        '…' => Some([0b00000, 0b00000, 0b00000, 0b00000, 0b10101, 0b10101]),
        '[' => Some([
            0b11110, // xxxx
            0b10000, // x
            0b10000, // x
            0b10000, // x
            0b10000, // xxxx
            0b11110,
        ]),
        ']' => Some([
            0b11110, // xxxx
            0b00010, //    x
            0b00010, //    x
            0b00010, //    x
            0b00010, // xxxx
            0b11110,
        ]),

        _ => None,
    }
}

pub fn char_bitmap_8x8(c: char) -> Option<[u8; 8]> {
    match c {
        // A-Z
        'A' => Some([
            0b01111110, 0b10000001, 0b10000001, 0b11111111, 0b10000001, 0b10000001, 0b10000001,
            0b00000000,
        ]),
        'B' => Some([
            0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10000001, 0b10000001, 0b11111110,
            0b00000000,
        ]),
        'C' => Some([
            0b01111110, 0b10000001, 0b10000000, 0b10000000, 0b10000000, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        'D' => Some([
            0b11111100, 0b10000010, 0b10000001, 0b10000001, 0b10000001, 0b10000010, 0b11111100,
            0b00000000,
        ]),
        'E' => Some([
            0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b10000000, 0b10000000, 0b11111111,
            0b00000000,
        ]),
        'F' => Some([
            0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b10000000, 0b10000000, 0b10000000,
            0b00000000,
        ]),
        'G' => Some([
            0b01111110, 0b10000001, 0b10000000, 0b10001111, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        'H' => Some([
            0b10000001, 0b10000001, 0b10000001, 0b11111111, 0b10000001, 0b10000001, 0b10000001,
            0b00000000,
        ]),
        'I' => Some([
            0b00111000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00111000,
            0b00000000,
        ]),
        'J' => Some([
            0b00011111, 0b00000110, 0b00000110, 0b00000110, 0b00000110, 0b10000110, 0b01111100,
            0b00000000,
        ]),
        'K' => Some([
            0b10000001, 0b10000010, 0b10000100, 0b11111000, 0b10000100, 0b10000010, 0b10000001,
            0b00000000,
        ]),
        'L' => Some([
            0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b11111100,
            0b00000000,
        ]),
        'M' => Some([
            0b10000001, 0b11000011, 0b10100101, 0b10011001, 0b10000001, 0b10000001, 0b10000001,
            0b00000000,
        ]),
        'N' => Some([
            0b10000001, 0b11000001, 0b10100001, 0b10010001, 0b10001001, 0b10000101, 0b10000011,
            0b00000000,
        ]),
        'O' => Some([
            0b01111110, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        'P' => Some([
            0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10000000, 0b10000000, 0b10000000,
            0b00000000,
        ]),
        'Q' => Some([
            0b01111110, 0b10000001, 0b10000001, 0b10000001, 0b10001001, 0b10000101, 0b01111110,
            0b00000001,
        ]),
        'R' => Some([
            0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10001000, 0b10000100, 0b10000010,
            0b00000000,
        ]),
        'S' => Some([
            0b01111110, 0b10000001, 0b10000000, 0b01111110, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        'T' => Some([
            0b11111110, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000,
            0b00000000,
        ]),
        'U' => Some([
            0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        'V' => Some([
            0b10000001, 0b10000001, 0b10000001, 0b01000010, 0b01000010, 0b00100100, 0b00011000,
            0b00000000,
        ]),
        'W' => Some([
            0b10000001, 0b10000001, 0b10000001, 0b10011001, 0b10011001, 0b01100110, 0b01100110,
            0b00000000,
        ]),
        'X' => Some([
            0b10000001, 0b01000010, 0b00100100, 0b00011000, 0b00100100, 0b01000010, 0b10000001,
            0b00000000,
        ]),
        'Y' => Some([
            0b10000001, 0b01000010, 0b00100100, 0b00011000, 0b00011000, 0b00011000, 0b00011000,
            0b00000000,
        ]),
        'Z' => Some([
            0b11111111, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b11111111,
            0b00000000,
        ]),
        'a' => Some([
            0b00000000, 0b01111100, 0b00000010, 0b01111110, 0b10000010, 0b10000110, 0b01111011,
            0b00000000,
        ]),
        'b' => Some([
            0b10000000, 0b10000000, 0b10111100, 0b11000010, 0b10000010, 0b11000010, 0b10111100,
            0b00000000,
        ]),
        'c' => Some([
            0b00000000, 0b01111100, 0b10000010, 0b10000000, 0b10000000, 0b10000010, 0b01111100,
            0b00000000,
        ]),
        'd' => Some([
            0b00000010, 0b00000010, 0b01111110, 0b10000010, 0b10000010, 0b10000110, 0b01111010,
            0b00000000,
        ]),
        'e' => Some([
            0b00000000, 0b01111100, 0b10000010, 0b11111110, 0b10000000, 0b10000010, 0b01111100,
            0b00000000,
        ]),
        'f' => Some([
            0b00111100, 0b01000000, 0b01000000, 0b11110000, 0b01000000, 0b01000000, 0b01000000,
            0b00000000,
        ]),
        'g' => Some([
            0b00000000, 0b01111110, 0b10000010, 0b01111110, 0b00000010, 0b00000100, 0b01111100,
            0b00000000,
        ]),
        'h' => Some([
            0b10000000, 0b10000000, 0b10111100, 0b11000010, 0b10000010, 0b10000010, 0b10000010,
            0b00000000,
        ]),
        'i' => Some([
            0b00010000, 0b00000000, 0b01110000, 0b00010000, 0b00010000, 0b00010000, 0b01111000,
            0b00000000,
        ]),
        'j' => Some([
            0b00001000, 0b00000000, 0b00111100, 0b00001000, 0b00001000, 0b10001000, 0b01110000,
            0b00000000,
        ]),
        'k' => Some([
            0b10000000, 0b10000100, 0b10001000, 0b11110000, 0b10001000, 0b10000100, 0b10000010,
            0b00000000,
        ]),
        'l' => Some([
            0b01100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b01110000,
            0b00000000,
        ]),
        'm' => Some([
            0b00000000, 0b11011000, 0b10100100, 0b10100100, 0b10100100, 0b10100100, 0b10100100,
            0b00000000,
        ]),
        'n' => Some([
            0b00000000, 0b10111100, 0b11000010, 0b10000010, 0b10000010, 0b10000010, 0b10000010,
            0b00000000,
        ]),
        'o' => Some([
            0b00000000, 0b01111100, 0b10000010, 0b10000010, 0b10000010, 0b10000010, 0b01111100,
            0b00000000,
        ]),
        'p' => Some([
            0b00000000, 0b10111100, 0b11000010, 0b10000010, 0b11111100, 0b10000000, 0b10000000,
            0b00000000,
        ]),
        'q' => Some([
            0b00000000, 0b01111010, 0b10000110, 0b10000010, 0b01111110, 0b00000010, 0b00000010,
            0b00000000,
        ]),
        'r' => Some([
            0b00000000, 0b10111100, 0b11000010, 0b10000000, 0b10000000, 0b10000000, 0b10000000,
            0b00000000,
        ]),
        's' => Some([
            0b00000000, 0b01111110, 0b10000000, 0b01111100, 0b00000010, 0b10000010, 0b01111100,
            0b00000000,
        ]),
        't' => Some([
            0b01000000, 0b01000000, 0b11110000, 0b01000000, 0b01000000, 0b01000010, 0b00111100,
            0b00000000,
        ]),
        'u' => Some([
            0b00000000, 0b10000010, 0b10000010, 0b10000010, 0b10000110, 0b01111010, 0b00000000,
            0b00000000,
        ]),
        'v' => Some([
            0b00000000, 0b10000010, 0b10000010, 0b01000100, 0b01000100, 0b00101000, 0b00010000,
            0b00000000,
        ]),
        'w' => Some([
            0b00000000, 0b10000010, 0b10000010, 0b10101010, 0b10101010, 0b01010100, 0b01010100,
            0b00000000,
        ]),
        'x' => Some([
            0b00000000, 0b10000010, 0b01000100, 0b00101000, 0b00101000, 0b01000100, 0b10000010,
            0b00000000,
        ]),
        'y' => Some([
            0b00000000, 0b10000010, 0b10000010, 0b01111110, 0b00000010, 0b00000100, 0b01111000,
            0b00000000,
        ]),
        'z' => Some([
            0b00000000, 0b11111110, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b11111110,
            0b00000000,
        ]),
        // 0-9
        '0' => Some([
            0b01111110, 0b10000001, 0b10000011, 0b10100101, 0b11000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        '1' => Some([
            0b00011000, 0b00111000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b01111110,
            0b00000000,
        ]),
        '2' => Some([
            0b01111110, 0b10000001, 0b00000001, 0b00001110, 0b00110000, 0b01000000, 0b11111111,
            0b00000000,
        ]),
        '3' => Some([
            0b01111110, 0b10000001, 0b00000001, 0b00111110, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        '4' => Some([
            0b00001000, 0b00011000, 0b00101000, 0b01001000, 0b11111111, 0b00001000, 0b00001000,
            0b00000000,
        ]),
        '5' => Some([
            0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        '6' => Some([
            0b01111110, 0b10000001, 0b10000000, 0b11111110, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        '7' => Some([
            0b11111111, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000,
            0b00000000,
        ]),
        '8' => Some([
            0b01111110, 0b10000001, 0b10000001, 0b01111110, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        '9' => Some([
            0b01111110, 0b10000001, 0b10000001, 0b01111111, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ]),
        '.' => Some([
            0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000, 0b00011000,
            0b00000000,
        ]),
        '<' => Some([
            0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00001000, 0b00000100, 0b00000010,
            0b00000000,
        ]),
        '>' => Some([
            0b01000000, 0b00100000, 0b00010000, 0b00001000, 0b00010000, 0b00100000, 0b01000000,
            0b00000000,
        ]),
        '(' => Some([
            0b00011000, 0b00100000, 0b01000000, 0b01000000, 0b01000000, 0b00100000, 0b00011000,
            0b00000000,
        ]),
        ')' => Some([
            0b00011000, 0b00000100, 0b00000010, 0b00000010, 0b00000010, 0b00000100, 0b00011000,
            0b00000000,
        ]),
        _ => None,
    }
}
