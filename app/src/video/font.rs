use crate::video::text::FontSize;

#[inline]
pub fn get_char_bitmap(c: char, size: FontSize) -> &'static [u8] {
    match size {
        FontSize::Font3x4 => char_bitmap_3x4(c),
        FontSize::Font4x5 => char_bitmap_4x5(c),
        FontSize::Font5x5 => char_bitmap_5x5(c),
        FontSize::Font5x6 => char_bitmap_5x6(c),
        FontSize::Font8x8 => char_bitmap_8x8(c),
    }
}

pub const fn char_bitmap_3x4(c: char) -> &'static [u8; 4] {
    match c {
        '0' => &[0b110, 0b101, 0b101, 0b011],
        '1' => &[0b010, 0b110, 0b010, 0b111],
        '2' => &[0b110, 0b001, 0b010, 0b111],
        '3' => &[0b110, 0b011, 0b001, 0b111],
        '4' => &[0b101, 0b101, 0b111, 0b001],
        '5' => &[0b111, 0b110, 0b001, 0b110],
        '6' => &[0b100, 0b111, 0b101, 0b111],
        '7' => &[0b111, 0b001, 0b010, 0b010],
        '8' => &[0b111, 0b101, 0b111, 0b111],
        '9' => &[0b111, 0b101, 0b111, 0b001],
        '.' => &[0b000, 0b000, 0b000, 0b010],
        'a' | 'A' => &[0b110, 0b101, 0b111, 0b101],
        'b' | 'B' => &[0b110, 0b111, 0b101, 0b111],
        'c' | 'C' => &[0b011, 0b100, 0b100, 0b011],
        'd' | 'D' => &[0b110, 0b101, 0b101, 0b110],
        'e' | 'E' => &[0b111, 0b110, 0b100, 0b111],
        'f' | 'F' => &[0b111, 0b100, 0b110, 0b100],
        'g' | 'G' => &[0b011, 0b100, 0b101, 0b111],
        'h' | 'H' => &[0b101, 0b111, 0b101, 0b101],
        'i' | 'I' => &[0b111, 0b010, 0b010, 0b111],
        'j' | 'J' => &[0b011, 0b001, 0b101, 0b011],
        'k' | 'K' => &[0b101, 0b101, 0b110, 0b101],
        'l' | 'L' => &[0b100, 0b100, 0b100, 0b111],
        'm' | 'M' => &[0b111, 0b111, 0b101, 0b101],
        'n' | 'N' => &[0b110, 0b101, 0b101, 0b101],
        'o' | 'O' => &[0b111, 0b101, 0b101, 0b111],
        'p' | 'P' => &[0b110, 0b101, 0b111, 0b100],
        'q' | 'Q' => &[0b111, 0b101, 0b111, 0b010],
        'r' | 'R' => &[0b110, 0b101, 0b110, 0b101],
        's' | 'S' => &[0b111, 0b100, 0b001, 0b111],
        't' | 'T' => &[0b111, 0b010, 0b010, 0b010],
        'u' | 'U' => &[0b101, 0b101, 0b101, 0b111],
        'v' | 'V' => &[0b101, 0b101, 0b101, 0b010],
        'w' | 'W' => &[0b101, 0b101, 0b111, 0b111],
        'x' | 'X' => &[0b101, 0b010, 0b010, 0b101],
        'y' | 'Y' => &[0b101, 0b101, 0b010, 0b010],
        'z' | 'Z' => &[0b111, 0b001, 0b100, 0b111],
        '<' => &[0b001, 0b010, 0b100, 0b010],
        '>' => &[0b100, 0b010, 0b001, 0b010],
        '(' => &[0b010, 0b100, 0b100, 0b010],
        ')' => &[0b010, 0b001, 0b001, 0b010],
        ',' => &[0b000, 0b000, 0b010, 0b100],
        '!' => &[0b010, 0b010, 0b010, 0b010],
        '-' => &[0b000, 0b111, 0b000, 0b000],
        '+' => &[0b010, 0b111, 0b010, 0b000],
        '*' => &[0b101, 0b010, 0b111, 0b010],
        '■' => &[0b111, 0b111, 0b111, 0b111],
        '●' => &[0b010, 0b111, 0b111, 0b010],
        '▶' => &[0b010, 0b011, 0b011, 0b010],
        '◀' => &[0b010, 0b110, 0b110, 0b010],
        '▲' => &[0b010, 0b111, 0b101, 0b000],
        '▼' => &[0b000, 0b101, 0b111, 0b010],
        '#' => &[0b101, 0b111, 0b101, 0b111],
        ':' => &[0b010, 0b000, 0b000, 0b010],
        '/' => &[0b001, 0b010, 0b010, 0b100],
        '\\' => &[0b100, 0b010, 0b010, 0b001],
        '…' => &[0b000, 0b000, 0b000, 0b101],
        _ => &[0b000; 4],
    }
}

pub const fn char_bitmap_4x5(ch: char) -> &'static [u8; 5] {
    match ch {
        'A' | 'a' => &[0b0110, 0b1001, 0b1111, 0b1001, 0b1001],
        'B' | 'b' => &[0b1110, 0b1001, 0b1110, 0b1001, 0b1110],
        'C' | 'c' => &[0b0111, 0b1000, 0b1000, 0b1000, 0b0111],
        'D' | 'd' => &[0b1110, 0b1001, 0b1001, 0b1001, 0b1110],
        'E' | 'e' => &[0b1111, 0b1000, 0b1110, 0b1000, 0b1111],
        'F' | 'f' => &[0b1111, 0b1000, 0b1110, 0b1000, 0b1000],
        'G' | 'g' => &[0b0111, 0b1000, 0b1011, 0b1001, 0b0111],
        'H' | 'h' => &[0b1001, 0b1001, 0b1111, 0b1001, 0b1001],
        'I' | 'i' => &[0b1110, 0b0100, 0b0100, 0b0100, 0b1110],
        'J' | 'j' => &[0b0011, 0b0001, 0b0001, 0b1001, 0b0110],
        'K' | 'k' => &[0b1001, 0b1010, 0b1100, 0b1010, 0b1001],
        'L' | 'l' => &[0b1000, 0b1000, 0b1000, 0b1000, 0b1111],
        'M' | 'm' => &[0b1001, 0b1111, 0b1001, 0b1001, 0b1001],
        'N' | 'n' => &[0b1001, 0b1101, 0b1011, 0b1001, 0b1001],
        'O' | 'o' => &[0b0110, 0b1001, 0b1001, 0b1001, 0b0110],
        'P' | 'p' => &[0b1110, 0b1001, 0b1110, 0b1000, 0b1000],
        'Q' | 'q' => &[0b0110, 0b1001, 0b1001, 0b1011, 0b0111],
        'R' | 'r' => &[0b1110, 0b1001, 0b1110, 0b1010, 0b1001],
        'S' | 's' => &[0b0111, 0b1000, 0b0110, 0b0001, 0b1110],
        'T' | 't' => &[0b1110, 0b0100, 0b0100, 0b0100, 0b0100],
        'U' | 'u' => &[0b1001, 0b1001, 0b1001, 0b1001, 0b0110],
        'V' | 'v' => &[0b1010, 0b1010, 0b1010, 0b1010, 0b0100],
        'W' | 'w' => &[0b1001, 0b1001, 0b1001, 0b1111, 0b1001],
        'X' | 'x' => &[0b1001, 0b1001, 0b0110, 0b1001, 0b1001],
        'Y' | 'y' => &[0b1001, 0b1001, 0b0111, 0b0001, 0b0110],
        'Z' | 'z' => &[0b1111, 0b0010, 0b0100, 0b1000, 0b1111],
        '0' => &[0b0110, 0b1001, 0b1001, 0b1001, 0b0110],
        '1' => &[0b0100, 0b1100, 0b0100, 0b0100, 0b1110],
        '2' => &[0b1110, 0b0001, 0b1110, 0b1000, 0b1111],
        '3' => &[0b1110, 0b0001, 0b0110, 0b0001, 0b1110],
        '4' => &[0b1001, 0b1001, 0b1111, 0b0001, 0b0001],
        '5' => &[0b1111, 0b1000, 0b1110, 0b0001, 0b1110],
        '6' => &[0b0110, 0b1000, 0b1110, 0b1001, 0b0110],
        '7' => &[0b1111, 0b0001, 0b0010, 0b0100, 0b0100],
        '8' => &[0b0110, 0b1001, 0b0110, 0b1001, 0b0110],
        '9' => &[0b0110, 0b1001, 0b0111, 0b0001, 0b0110],
        '.' => &[0b0000, 0b0000, 0b0000, 0b0110, 0b0110],
        '<' => &[0b0001, 0b0010, 0b0100, 0b0010, 0b0001],
        '>' => &[0b0100, 0b0010, 0b0001, 0b0010, 0b0100],
        '(' => &[0b0010, 0b0100, 0b0100, 0b0100, 0b0010],
        ')' => &[0b0100, 0b0010, 0b0010, 0b0010, 0b0100],
        ',' => &[0b0000, 0b0000, 0b0000, 0b0010, 0b0110],
        '!' => &[0b0010, 0b0010, 0b0010, 0b0000, 0b0010],
        '-' => &[0b0000, 0b0000, 0b1111, 0b0000, 0b0000],
        '+' => &[0b0000, 0b0010, 0b1111, 0b0010, 0b0000],
        '*' => &[0b0000, 0b1010, 0b0110, 0b1010, 0b0000],
        '■' => &[0b0000, 0b1111, 0b1111, 0b1111, 0b0000],
        '●' => &[0b0000, 0b0110, 0b1111, 0b0110, 0b0000],
        '▶' => &[0b0010, 0b0011, 0b0011, 0b0010, 0b0000],
        '◀' => &[0b0010, 0b0110, 0b0110, 0b0010, 0b0000],
        '▲' => &[0b0010, 0b0111, 0b1111, 0b0000, 0b0000],
        '▼' => &[0b0000, 0b0000, 0b1111, 0b0111, 0b0010],
        '#' => &[0b0101, 0b1111, 0b0101, 0b1111, 0b0101],
        ':' => &[0b0000, 0b0010, 0b0000, 0b0010, 0b0000],
        '/' => &[0b0001, 0b0010, 0b0100, 0b1000, 0b0000],
        '\\' => &[0b1000, 0b0100, 0b0010, 0b0001, 0b0000],
        'µ' => &[0b1001, 0b1001, 0b1001, 0b1111, 0b1000],
        '…' => &[0b0000, 0b0000, 0b0000, 0b0000, 0b1010],
        '[' => &[0b1110, 0b1000, 0b1000, 0b1000, 0b1110],
        ']' => &[0b1110, 0b0010, 0b0010, 0b0010, 0b1110],
        _ => &[0b0000; 5],
    }
}

pub const fn char_bitmap_5x5(ch: char) -> &'static [u8; 5] {
    match ch {
        'a' | 'A' => &[0b01110, 0b10001, 0b11111, 0b10001, 0b10001],
        'b' | 'B' => &[0b11110, 0b10001, 0b11110, 0b10001, 0b11110],
        'c' | 'C' => &[0b01111, 0b10000, 0b10000, 0b10000, 0b01111],
        'd' | 'D' => &[0b11110, 0b10001, 0b10001, 0b10001, 0b11110],
        'e' | 'E' => &[0b11111, 0b10000, 0b11110, 0b10000, 0b11111],
        'f' | 'F' => &[0b11111, 0b10000, 0b11110, 0b10000, 0b10000],
        'g' | 'G' => &[0b01111, 0b10000, 0b10111, 0b10001, 0b01111],
        'h' | 'H' => &[0b10001, 0b10001, 0b11111, 0b10001, 0b10001],
        'i' | 'I' => &[0b01110, 0b00100, 0b00100, 0b00100, 0b01110],
        'j' | 'J' => &[0b00111, 0b00010, 0b00010, 0b10010, 0b01100],
        'k' | 'K' => &[0b10001, 0b10010, 0b11100, 0b10010, 0b10001],
        'l' | 'L' => &[0b10000, 0b10000, 0b10000, 0b10000, 0b11111],
        'm' | 'M' => &[0b10001, 0b11011, 0b10101, 0b10001, 0b10001],
        'n' | 'N' => &[0b10001, 0b11001, 0b10101, 0b10011, 0b10001],
        'o' | 'O' => &[0b01110, 0b10001, 0b10001, 0b10001, 0b01110],
        'p' | 'P' => &[0b11110, 0b10001, 0b11110, 0b10000, 0b10000],
        'q' | 'Q' => &[0b01110, 0b10001, 0b10001, 0b10011, 0b01111],
        'r' | 'R' => &[0b11110, 0b10001, 0b11110, 0b10010, 0b10001],
        's' | 'S' => &[0b01111, 0b10000, 0b01110, 0b00001, 0b11110],
        't' | 'T' => &[0b11111, 0b00100, 0b00100, 0b00100, 0b00100],
        'u' | 'U' => &[0b10001, 0b10001, 0b10001, 0b10001, 0b01110],
        'v' | 'V' => &[0b10001, 0b10001, 0b10001, 0b01010, 0b00100],
        'w' | 'W' => &[0b10001, 0b10001, 0b10101, 0b11011, 0b10001],
        'x' | 'X' => &[0b10001, 0b01010, 0b00100, 0b01010, 0b10001],
        'y' | 'Y' => &[0b10001, 0b01010, 0b00100, 0b00100, 0b00100],
        'z' | 'Z' => &[0b11111, 0b00010, 0b00100, 0b01000, 0b11111],
        '0' => &[0b01110, 0b10011, 0b10101, 0b11001, 0b01110],
        '1' => &[0b00100, 0b01100, 0b00100, 0b00100, 0b01110],
        '2' => &[0b11110, 0b00001, 0b01110, 0b10000, 0b11111],
        '3' => &[0b11110, 0b00001, 0b01110, 0b00001, 0b11110],
        '4' => &[0b00010, 0b00110, 0b01010, 0b11111, 0b00010],
        '5' => &[0b11111, 0b10000, 0b11110, 0b00001, 0b11110],
        '6' => &[0b01110, 0b10000, 0b11110, 0b10001, 0b01110],
        '7' => &[0b11111, 0b00001, 0b00010, 0b00100, 0b01000],
        '8' => &[0b01110, 0b10001, 0b01110, 0b10001, 0b01110],
        '9' => &[0b01110, 0b10001, 0b01111, 0b00001, 0b01110],
        '<' => &[0b00010, 0b00100, 0b01000, 0b00100, 0b00010],
        '>' => &[0b01000, 0b00100, 0b00010, 0b00100, 0b01000],
        '(' => &[0b00110, 0b01000, 0b01000, 0b01000, 0b00110],
        ')' => &[0b01100, 0b00010, 0b00010, 0b00010, 0b01100],
        ',' => &[0b00000, 0b00000, 0b00000, 0b00110, 0b01100],
        '.' => &[0b00000, 0b00000, 0b00000, 0b01100, 0b01100],
        '!' => &[0b00100, 0b00100, 0b00100, 0b00000, 0b00100],
        '-' => &[0b00000, 0b00000, 0b11111, 0b00000, 0b00000],
        '+' => &[0b00100, 0b00100, 0b11111, 0b00100, 0b00100],
        '*' => &[0b10101, 0b01110, 0b11111, 0b01110, 0b10101],
        '■' => &[0b11111, 0b11111, 0b11111, 0b11111, 0b11111],
        '●' => &[0b01110, 0b11111, 0b11111, 0b11111, 0b01110],
        '▶' => &[0b00100, 0b00110, 0b00111, 0b00110, 0b00100],
        '◀' => &[0b00100, 0b01100, 0b11100, 0b01100, 0b00100],
        '▲' => &[0b00100, 0b01110, 0b11111, 0b00000, 0b00000],
        '▼' => &[0b00000, 0b00000, 0b11111, 0b01110, 0b00100],
        '#' => &[0b01010, 0b11111, 0b01010, 0b11111, 0b01010],
        ':' => &[0b00000, 0b00100, 0b00000, 0b00100, 0b00000],
        '/' => &[0b00010, 0b00010, 0b00100, 0b01000, 0b01000],
        '\\' => &[0b01000, 0b01000, 0b00100, 0b00010, 0b00010],
        'µ' => &[0b10001, 0b10001, 0b10011, 0b11101, 0b10000],
        '…' => &[0b00000, 0b00000, 0b00000, 0b10101, 0b10101],
        '[' => &[0b11110, 0b10000, 0b10000, 0b10000, 0b11110],
        ']' => &[0b11110, 0b00010, 0b00010, 0b00010, 0b11110],
        _ => &[0b0000; 5],
    }
}

pub const fn char_bitmap_5x6(c: char) -> &'static [u8; 6] {
    match c {
        'A' => &[0b01110, 0b10001, 0b11111, 0b10001, 0b10001, 0b10001],
        'B' => &[0b11110, 0b10001, 0b11110, 0b10001, 0b10001, 0b11110],
        'C' => &[0b01110, 0b10001, 0b10000, 0b10000, 0b10001, 0b01110],
        'D' => &[0b11100, 0b10010, 0b10001, 0b10001, 0b10010, 0b11100],
        'E' => &[0b11111, 0b10000, 0b11110, 0b10000, 0b10000, 0b11111],
        'F' => &[0b11111, 0b10000, 0b10000, 0b11110, 0b10000, 0b10000],
        'G' => &[0b01110, 0b10000, 0b10000, 0b10011, 0b10001, 0b01111],
        'H' => &[0b10001, 0b10001, 0b11111, 0b10001, 0b10001, 0b10001],
        'I' => &[0b01110, 0b00100, 0b00100, 0b00100, 0b00100, 0b01110],
        'J' => &[0b00011, 0b00010, 0b00010, 0b00010, 0b10010, 0b01100],
        'K' => &[0b10001, 0b10010, 0b11100, 0b10010, 0b10001, 0b10001],
        'L' => &[0b10000, 0b10000, 0b10000, 0b10000, 0b10000, 0b11111],
        'M' => &[0b10001, 0b11011, 0b10101, 0b10001, 0b10001, 0b10001],
        'N' => &[0b10001, 0b11001, 0b10101, 0b10011, 0b10001, 0b10001],
        'O' => &[0b01110, 0b10001, 0b10001, 0b10001, 0b10001, 0b01110],
        'P' => &[0b11110, 0b10001, 0b10001, 0b11110, 0b10000, 0b10000],
        'Q' => &[0b01110, 0b10001, 0b10001, 0b10101, 0b10010, 0b01101],
        'R' => &[0b11110, 0b10001, 0b10001, 0b11110, 0b10001, 0b10001],
        'S' => &[0b01111, 0b10000, 0b01110, 0b00001, 0b10001, 0b01110],
        'T' => &[0b11111, 0b00100, 0b00100, 0b00100, 0b00100, 0b00100],
        'U' => &[0b10001, 0b10001, 0b10001, 0b10001, 0b10001, 0b01110],
        'V' => &[0b10001, 0b10001, 0b10001, 0b01010, 0b01010, 0b00100],
        'W' => &[0b10001, 0b10001, 0b10001, 0b10101, 0b10101, 0b01010],
        'X' => &[0b10001, 0b01010, 0b00100, 0b00100, 0b01010, 0b10001],
        'Y' => &[0b10001, 0b01010, 0b00100, 0b00100, 0b00100, 0b00100],
        'Z' => &[0b11111, 0b00010, 0b00100, 0b01000, 0b10000, 0b11111],
        'a' => &[0b00000, 0b01110, 0b00001, 0b01111, 0b10001, 0b01111],
        'b' => &[0b10000, 0b10000, 0b11110, 0b10001, 0b10001, 0b11110],
        'c' => &[0b00000, 0b01110, 0b10000, 0b10000, 0b10000, 0b01110],
        'd' => &[0b00001, 0b00001, 0b01111, 0b10001, 0b10001, 0b01111],
        'e' => &[0b00000, 0b01110, 0b10001, 0b11111, 0b10000, 0b01110],
        'f' => &[0b00110, 0b01000, 0b11100, 0b01000, 0b01000, 0b01000],
        'g' => &[0b00000, 0b01111, 0b10001, 0b01111, 0b00001, 0b01110],
        'h' => &[0b10000, 0b10000, 0b11110, 0b10001, 0b10001, 0b10001],
        'i' => &[0b00100, 0b00000, 0b01100, 0b00100, 0b00100, 0b01110],
        'j' => &[0b00010, 0b00000, 0b00110, 0b00010, 0b00010, 0b11100],
        'k' => &[0b10000, 0b10010, 0b10100, 0b11000, 0b10100, 0b10010],
        'l' => &[0b11000, 0b01000, 0b01000, 0b01000, 0b01000, 0b11100],
        'm' => &[0b00000, 0b11010, 0b10101, 0b10101, 0b10101, 0b10101],
        'n' => &[0b00000, 0b11110, 0b10001, 0b10001, 0b10001, 0b10001],
        'o' => &[0b00000, 0b01110, 0b10001, 0b10001, 0b10001, 0b01110],
        'p' => &[0b00000, 0b11110, 0b10001, 0b11110, 0b10000, 0b10000],
        'q' => &[0b00000, 0b01111, 0b10001, 0b01111, 0b00001, 0b00001],
        'r' => &[0b00000, 0b10110, 0b11001, 0b10000, 0b10000, 0b10000],
        's' => &[0b00000, 0b01111, 0b10000, 0b01110, 0b00001, 0b11110],
        't' => &[0b00100, 0b01110, 0b00100, 0b00100, 0b00100, 0b00011],
        'u' => &[0b00000, 0b10001, 0b10001, 0b10001, 0b10011, 0b01101],
        'v' => &[0b00000, 0b10001, 0b10001, 0b01010, 0b01010, 0b00100],
        'w' => &[0b00000, 0b10001, 0b10001, 0b10101, 0b10101, 0b01010],
        'x' => &[0b00000, 0b10001, 0b01010, 0b00100, 0b01010, 0b10001],
        'y' => &[0b00000, 0b10001, 0b10001, 0b01111, 0b00001, 0b01110],
        'z' => &[0b00000, 0b11111, 0b00010, 0b00100, 0b01000, 0b11111],
        '0' => &[0b01110, 0b10011, 0b10101, 0b11001, 0b10001, 0b01110],
        '1' => &[0b00100, 0b01100, 0b00100, 0b00100, 0b00100, 0b01110],
        '2' => &[0b01110, 0b10001, 0b00010, 0b00100, 0b01000, 0b11111],
        '3' => &[0b11110, 0b00001, 0b00110, 0b00001, 0b10001, 0b01110],
        '4' => &[0b00010, 0b00110, 0b01010, 0b11111, 0b00010, 0b00010],
        '5' => &[0b11111, 0b10000, 0b11110, 0b00001, 0b10001, 0b01110],
        '6' => &[0b01110, 0b10000, 0b11110, 0b10001, 0b10001, 0b01110],
        '7' => &[0b11111, 0b00001, 0b00010, 0b00100, 0b01000, 0b01000],
        '8' => &[0b01110, 0b10001, 0b01110, 0b10001, 0b10001, 0b01110],
        '9' => &[0b01110, 0b10001, 0b10001, 0b01111, 0b00001, 0b01110],
        '.' => &[0b00000, 0b00000, 0b00000, 0b00000, 0b01100, 0b01100],
        '<' => &[0b00010, 0b00100, 0b01000, 0b00100, 0b00010, 0b00000],
        '>' => &[0b01000, 0b00100, 0b00010, 0b00100, 0b01000, 0b00000],
        '(' => &[0b00010, 0b00100, 0b00100, 0b00100, 0b00100, 0b00010],
        ')' => &[0b01000, 0b00100, 0b00100, 0b00100, 0b00100, 0b01000],
        ',' => &[0b00000, 0b00000, 0b00000, 0b00000, 0b00110, 0b01100],
        '!' => &[0b00100, 0b00100, 0b00100, 0b00100, 0b00000, 0b00100],
        '-' => &[0b00000, 0b00000, 0b11111, 0b00000, 0b00000, 0b00000],
        '+' => &[0b00000, 0b00100, 0b00100, 0b11111, 0b00100, 0b00100],
        '*' => &[0b00000, 0b10101, 0b01110, 0b11111, 0b01110, 0b10101],
        '■' => &[0b00000, 0b11111, 0b11111, 0b11111, 0b11111, 0b00000],
        '●' => &[0b00000, 0b01110, 0b11111, 0b11111, 0b01110, 0b00000],
        '▶' => &[0b00100, 0b00110, 0b00111, 0b00110, 0b00100, 0b00000],
        '◀' => &[0b00100, 0b01100, 0b11100, 0b01100, 0b00100, 0b00000],
        '▲' => &[0b00100, 0b01110, 0b11111, 0b00000, 0b00000, 0b00000],
        '▼' => &[0b00000, 0b00000, 0b00000, 0b11111, 0b01110, 0b00100],
        '#' => &[0b01010, 0b11111, 0b01010, 0b01010, 0b11111, 0b01010],
        ':' => &[0b00000, 0b00100, 0b00000, 0b00000, 0b00100, 0b00000],
        '/' => &[0b00000, 0b00010, 0b00010, 0b00100, 0b01000, 0b01000],
        '\\' => &[0b00000, 0b01000, 0b01000, 0b00100, 0b00010, 0b00010],
        'µ' => &[0b10001, 0b10001, 0b10001, 0b10011, 0b11101, 0b10000],
        '…' => &[0b00000, 0b00000, 0b00000, 0b00000, 0b10101, 0b10101],
        '[' => &[0b11110, 0b10000, 0b10000, 0b10000, 0b10000, 0b11110],
        ']' => &[0b11110, 0b00010, 0b00010, 0b00010, 0b00010, 0b11110],
        _ => &[0b00000; 6],
    }
}

pub const fn char_bitmap_8x8(c: char) -> &'static [u8; 8] {
    match c {
        // A-Z
        'A' => &[
            0b01111110, 0b10000001, 0b10000001, 0b11111111, 0b10000001, 0b10000001, 0b10000001,
            0b00000000,
        ],
        'B' => &[
            0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10000001, 0b10000001, 0b11111110,
            0b00000000,
        ],
        'C' => &[
            0b01111110, 0b10000001, 0b10000000, 0b10000000, 0b10000000, 0b10000001, 0b01111110,
            0b00000000,
        ],
        'D' => &[
            0b11111100, 0b10000010, 0b10000001, 0b10000001, 0b10000001, 0b10000010, 0b11111100,
            0b00000000,
        ],
        'E' => &[
            0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b10000000, 0b10000000, 0b11111111,
            0b00000000,
        ],
        'F' => &[
            0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b10000000, 0b10000000, 0b10000000,
            0b00000000,
        ],
        'G' => &[
            0b01111110, 0b10000001, 0b10000000, 0b10001111, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        'H' => &[
            0b10000001, 0b10000001, 0b10000001, 0b11111111, 0b10000001, 0b10000001, 0b10000001,
            0b00000000,
        ],
        'I' => &[
            0b00111000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00111000,
            0b00000000,
        ],
        'J' => &[
            0b00011111, 0b00000110, 0b00000110, 0b00000110, 0b00000110, 0b10000110, 0b01111100,
            0b00000000,
        ],
        'K' => &[
            0b10000001, 0b10000010, 0b10000100, 0b11111000, 0b10000100, 0b10000010, 0b10000001,
            0b00000000,
        ],
        'L' => &[
            0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b11111100,
            0b00000000,
        ],
        'M' => &[
            0b10000001, 0b11000011, 0b10100101, 0b10011001, 0b10000001, 0b10000001, 0b10000001,
            0b00000000,
        ],
        'N' => &[
            0b10000001, 0b11000001, 0b10100001, 0b10010001, 0b10001001, 0b10000101, 0b10000011,
            0b00000000,
        ],
        'O' => &[
            0b01111110, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        'P' => &[
            0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10000000, 0b10000000, 0b10000000,
            0b00000000,
        ],
        'Q' => &[
            0b01111110, 0b10000001, 0b10000001, 0b10000001, 0b10001001, 0b10000101, 0b01111110,
            0b00000001,
        ],
        'R' => &[
            0b11111110, 0b10000001, 0b10000001, 0b11111110, 0b10001000, 0b10000100, 0b10000010,
            0b00000000,
        ],
        'S' => &[
            0b01111110, 0b10000001, 0b10000000, 0b01111110, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        'T' => &[
            0b11111110, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000,
            0b00000000,
        ],
        'U' => &[
            0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        'V' => &[
            0b10000001, 0b10000001, 0b10000001, 0b01000010, 0b01000010, 0b00100100, 0b00011000,
            0b00000000,
        ],
        'W' => &[
            0b10000001, 0b10000001, 0b10000001, 0b10011001, 0b10011001, 0b01100110, 0b01100110,
            0b00000000,
        ],
        'X' => &[
            0b10000001, 0b01000010, 0b00100100, 0b00011000, 0b00100100, 0b01000010, 0b10000001,
            0b00000000,
        ],
        'Y' => &[
            0b10000001, 0b01000010, 0b00100100, 0b00011000, 0b00011000, 0b00011000, 0b00011000,
            0b00000000,
        ],
        'Z' => &[
            0b11111111, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b11111111,
            0b00000000,
        ],
        'a' => &[
            0b00000000, 0b01111100, 0b00000010, 0b01111110, 0b10000010, 0b10000110, 0b01111011,
            0b00000000,
        ],
        'b' => &[
            0b10000000, 0b10000000, 0b10111100, 0b11000010, 0b10000010, 0b11000010, 0b10111100,
            0b00000000,
        ],
        'c' => &[
            0b00000000, 0b01111100, 0b10000010, 0b10000000, 0b10000000, 0b10000010, 0b01111100,
            0b00000000,
        ],
        'd' => &[
            0b00000010, 0b00000010, 0b01111110, 0b10000010, 0b10000010, 0b10000110, 0b01111010,
            0b00000000,
        ],
        'e' => &[
            0b00000000, 0b01111100, 0b10000010, 0b11111110, 0b10000000, 0b10000010, 0b01111100,
            0b00000000,
        ],
        'f' => &[
            0b00111100, 0b01000000, 0b01000000, 0b11110000, 0b01000000, 0b01000000, 0b01000000,
            0b00000000,
        ],
        'g' => &[
            0b00000000, 0b01111110, 0b10000010, 0b01111110, 0b00000010, 0b00000100, 0b01111100,
            0b00000000,
        ],
        'h' => &[
            0b10000000, 0b10000000, 0b10111100, 0b11000010, 0b10000010, 0b10000010, 0b10000010,
            0b00000000,
        ],
        'i' => &[
            0b00010000, 0b00000000, 0b01110000, 0b00010000, 0b00010000, 0b00010000, 0b01111000,
            0b00000000,
        ],
        'j' => &[
            0b00001000, 0b00000000, 0b00111100, 0b00001000, 0b00001000, 0b10001000, 0b01110000,
            0b00000000,
        ],
        'k' => &[
            0b10000000, 0b10000100, 0b10001000, 0b11110000, 0b10001000, 0b10000100, 0b10000010,
            0b00000000,
        ],
        'l' => &[
            0b01100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b01110000,
            0b00000000,
        ],
        'm' => &[
            0b00000000, 0b11011000, 0b10100100, 0b10100100, 0b10100100, 0b10100100, 0b10100100,
            0b00000000,
        ],
        'n' => &[
            0b00000000, 0b10111100, 0b11000010, 0b10000010, 0b10000010, 0b10000010, 0b10000010,
            0b00000000,
        ],
        'o' => &[
            0b00000000, 0b01111100, 0b10000010, 0b10000010, 0b10000010, 0b10000010, 0b01111100,
            0b00000000,
        ],
        'p' => &[
            0b00000000, 0b10111100, 0b11000010, 0b10000010, 0b11111100, 0b10000000, 0b10000000,
            0b00000000,
        ],
        'q' => &[
            0b00000000, 0b01111010, 0b10000110, 0b10000010, 0b01111110, 0b00000010, 0b00000010,
            0b00000000,
        ],
        'r' => &[
            0b00000000, 0b10111100, 0b11000010, 0b10000000, 0b10000000, 0b10000000, 0b10000000,
            0b00000000,
        ],
        's' => &[
            0b00000000, 0b01111110, 0b10000000, 0b01111100, 0b00000010, 0b10000010, 0b01111100,
            0b00000000,
        ],
        't' => &[
            0b01000000, 0b01000000, 0b11110000, 0b01000000, 0b01000000, 0b01000010, 0b00111100,
            0b00000000,
        ],
        'u' => &[
            0b00000000, 0b10000010, 0b10000010, 0b10000010, 0b10000110, 0b01111010, 0b00000000,
            0b00000000,
        ],
        'v' => &[
            0b00000000, 0b10000010, 0b10000010, 0b01000100, 0b01000100, 0b00101000, 0b00010000,
            0b00000000,
        ],
        'w' => &[
            0b00000000, 0b10000010, 0b10000010, 0b10101010, 0b10101010, 0b01010100, 0b01010100,
            0b00000000,
        ],
        'x' => &[
            0b00000000, 0b10000010, 0b01000100, 0b00101000, 0b00101000, 0b01000100, 0b10000010,
            0b00000000,
        ],
        'y' => &[
            0b00000000, 0b10000010, 0b10000010, 0b01111110, 0b00000010, 0b00000100, 0b01111000,
            0b00000000,
        ],
        'z' => &[
            0b00000000, 0b11111110, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b11111110,
            0b00000000,
        ],
        // 0-9
        '0' => &[
            0b01111110, 0b10000001, 0b10000011, 0b10100101, 0b11000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        '1' => &[
            0b00011000, 0b00111000, 0b00011000, 0b00011000, 0b00011000, 0b00011000, 0b01111110,
            0b00000000,
        ],
        '2' => &[
            0b01111110, 0b10000001, 0b00000001, 0b00001110, 0b00110000, 0b01000000, 0b11111111,
            0b00000000,
        ],
        '3' => &[
            0b01111110, 0b10000001, 0b00000001, 0b00111110, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        '4' => &[
            0b00001000, 0b00011000, 0b00101000, 0b01001000, 0b11111111, 0b00001000, 0b00001000,
            0b00000000,
        ],
        '5' => &[
            0b11111111, 0b10000000, 0b10000000, 0b11111110, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        '6' => &[
            0b01111110, 0b10000001, 0b10000000, 0b11111110, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        '7' => &[
            0b11111111, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000,
            0b00000000,
        ],
        '8' => &[
            0b01111110, 0b10000001, 0b10000001, 0b01111110, 0b10000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        '9' => &[
            0b01111110, 0b10000001, 0b10000001, 0b01111111, 0b00000001, 0b10000001, 0b01111110,
            0b00000000,
        ],
        '.' => &[
            0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000, 0b00011000,
            0b00000000,
        ],
        '<' => &[
            0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00001000, 0b00000100, 0b00000010,
            0b00000000,
        ],
        '>' => &[
            0b01000000, 0b00100000, 0b00010000, 0b00001000, 0b00010000, 0b00100000, 0b01000000,
            0b00000000,
        ],
        '(' => &[
            0b00011000, 0b00100000, 0b01000000, 0b01000000, 0b01000000, 0b00100000, 0b00011000,
            0b00000000,
        ],
        ')' => &[
            0b00011000, 0b00000100, 0b00000010, 0b00000010, 0b00000010, 0b00000100, 0b00011000,
            0b00000000,
        ],
        _ => &[0b00000000; 8],
    }
}
